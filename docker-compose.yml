version: "2.4"
services:
  ui:
    container_name: campsite-ui
    image: dnielsen/campsite:ui
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - api
  api:
    container_name: campsite-api
    build: services/api
    ports:
      - "1111:1111"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      auth:
        condition: service_started
      event:
        condition: service_started
      speaker:
        condition: service_started
      session:
        condition: service_started
    env_file:
      - docker.env
  auth:
    container_name: campsite-auth
    build: services/auth
    ports:
      - "2222:2222"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - docker.env
  speaker:
    container_name: campsite-speaker
    build: services/speaker
    ports:
      - "3333:3333"
    restart: always
    env_file:
      - docker.env
    depends_on:
      postgres:
        condition: service_healthy
  event:
    container_name: campsite-event
    build: services/event
    ports:
      - "4444:4444"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - docker.env
  session:
    container_name: campsite-session
    build: services/session
    ports:
      - "5555:5555"
    restart: always
    env_file:
      - docker.env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - CAMPSITE_SERVICE=session
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
